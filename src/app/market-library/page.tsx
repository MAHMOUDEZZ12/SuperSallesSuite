
'use client';

import React, from 'react';
import { LandingHeader } from '@/components/landing-header';
import { LandingFooter } from '@/components/landing-footer';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Search, Loader2, ArrowRight, Lightbulb, AlertTriangle, ShieldCheck, Megaphone, FileText, Users2 } from 'lucide-react';
import { useRouter, useSearchParams } from 'next/navigation';
import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';
import { ProjectCard } from '@/components/ui/project-card';
import type { Project } from '@/types';
import Link from 'next/link';
import { ConnectedAppCard } from '@/components/ui/connected-app-card';


// Mock data to simulate a rich API response for "Emaar"
const mockResults = {
    overview: {
        summary: "Emaar Properties is one of the world's most valuable and admired real estate development companies. With proven competencies in properties, shopping malls & retail and hospitality & leisure, Emaar shapes new lifestyles with a focus on design excellence, build quality and timely delivery.",
        chartData: [ { name: 'Q1', price: 4200 }, { name: 'Q2', price: 4500 }, { name: 'Q3', price: 4700 }, { name: 'Q4', price: 5200 } ]
    },
    listings: [
        { id: 'emaar-b-1', name: 'Emaar Beachfront', developer: 'Emaar', area: 'Dubai Harbour', priceFrom: 'AED 2.5M', status: 'Ready' },
        { id: 'emaar-dh-1', name: 'Dubai Hills Estate', developer: 'Emaar', area: 'MBR City', priceFrom: 'AED 3.1M', status: 'Ready' },
        { id: 'emaar-ar-3', name: 'Arabian Ranches III', developer: 'Emaar', area: 'Dubailand', priceFrom: 'AED 2.2M', status: 'Off-plan' },
    ],
    insights: {
        opportunities: [
            "Strong demand in waterfront properties presents a key sales opportunity.",
            "Consistently high ROI in their established communities like Downtown and Marina.",
        ],
        risks: [
            "Premium pricing can be a barrier for first-time buyers.",
            "High competition in the luxury apartment segment.",
        ],
        investorDemand: "Very High, particularly from European and Asian markets for luxury and high-yield rental properties."
    }
};

const SearchResults = ({ query }: { query: string }) => {
    // In a real app, this would fetch data. Here, we use mock data.
    const results = mockResults;

    return (
        <div className="mt-12 space-y-8">
            <Card className="bg-card/50 backdrop-blur-lg">
                <CardHeader>
                    <CardTitle className="text-2xl">Market Overview: {query}</CardTitle>
                    <CardDescription>An AI-generated summary of the current market landscape based on your query.</CardDescription>
                </CardHeader>
                <CardContent className="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div className="md:col-span-2 space-y-4">
                        <p className="text-foreground/80">{results.overview.summary}</p>
                    </div>
                    <div className="md:col-span-1 h-48 bg-muted rounded-lg flex items-center justify-center text-muted-foreground">
                        [ Trend Chart Placeholder for {query} ]
                    </div>
                </CardContent>
                 <CardFooter>
                    <Link href="/dashboard/tool/market-reports">
                        <Button variant="secondary">
                           <FileText className="mr-2 h-4 w-4" /> Get Full Report
                        </Button>
                    </Link>
                </CardFooter>
            </Card>

            <div className="space-y-4">
                <h2 className="text-2xl font-bold">Relevant Listings</h2>
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                    {results.listings.map((project) => (
                        <ProjectCard key={project.id} project={project} />
                    ))}
                </div>
                 <div className="text-center mt-4">
                     <Link href="/dashboard/tool/projects-finder">
                        <Button variant="outline">
                            View all projects from {query} <ArrowRight className="ml-2 h-4 w-4" />
                        </Button>
                    </Link>
                 </div>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <Card>
                    <CardHeader>
                        <CardTitle className="flex items-center gap-2"><Lightbulb className="text-primary"/> AI Insights</CardTitle>
                        <CardDescription>Key takeaways generated by our market intelligence model.</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-4">
                        <div>
                            <h4 className="font-semibold flex items-center gap-2 mb-2"><ShieldCheck className="text-green-500"/> Top Opportunities</h4>
                            <ul className="space-y-1 list-disc list-inside text-sm text-foreground/80">
                                {results.insights.opportunities.map((item, i) => <li key={i}>{item}</li>)}
                            </ul>
                        </div>
                         <div>
                            <h4 className="font-semibold flex items-center gap-2 mb-2"><AlertTriangle className="text-amber-500"/> Potential Risks</h4>
                            <ul className="space-y-1 list-disc list-inside text-sm text-foreground/80">
                                {results.insights.risks.map((item, i) => <li key={i}>{item}</li>)}
                            </ul>
                        </div>
                         <div>
                            <h4 className="font-semibold flex items-center gap-2 mb-2"><Users2 className="text-blue-500"/> Investor Demand</h4>
                            <p className="text-sm text-foreground/80">{results.insights.investorDemand}</p>
                        </div>
                    </CardContent>
                     <CardFooter>
                        <Link href="/dashboard/tool/investor-matching">
                            <Button variant="secondary">
                                <Users2 className="mr-2 h-4 w-4" /> Find investors for these properties
                            </Button>
                        </Link>
                     </CardFooter>
                </Card>
                 <Card className="bg-primary/5 border-primary/20">
                    <CardHeader>
                        <CardTitle className="flex items-center gap-2"><Megaphone /> Next Actions</CardTitle>
                        <CardDescription>Instantly act on these insights with connected apps.</CardDescription>
                    </CardHeader>
                    <CardContent className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                       <ConnectedAppCard 
                            title="Generate Full Report"
                            description="Create a detailed, downloadable PDF market report."
                            icon={<FileText/>}
                            ctaText="Go to Reports"
                            href="/dashboard/tool/market-reports"
                       />
                        <ConnectedAppCard 
                            title="Run Ad Campaign"
                            description="Promote these listings with the Meta Ads suite."
                            icon={<Megaphone/>}
                            ctaText="Go to Ads"
                            href="/dashboard/tool/meta-ads-copilot"
                       />
                    </CardContent>
                </Card>
            </div>
        </div>
    );
};

function MarketLibrary() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const initialQuery = searchParams.get('q') || '';
  const [query, setQuery] = React.useState(initialQuery);

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (query.trim()) {
      router.push(`/market-library?q=${encodeURIComponent(query)}`);
    }
  };

  return (
    <div className="flex min-h-screen flex-col bg-background">
      <LandingHeader />
      <main className="flex-1 w-full max-w-7xl mx-auto px-4 md:px-6 lg:px-8 py-12 md:py-20">
        <div className="text-center mb-16">
            <h1 className="text-4xl md:text-6xl font-bold font-heading tracking-tighter mb-4 text-foreground">
             Search anything about Dubaiâ€™s real estate market
            </h1>
        </div>

        <div className="max-w-3xl mx-auto">
            <form onSubmit={handleSearch} className="relative">
                <Search className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground" />
                <Input
                    placeholder="Search for project, developer, area, or even a service charge..."
                    className="w-full rounded-full h-14 pl-12 pr-28 text-base"
                    value={query}
                    onChange={(e) => setQuery(e.target.value)}
                    autoFocus
                />
                <Button type="submit" className="absolute right-2 top-1/2 -translate-y-1/2 rounded-full h-10 w-24">
                    Search
                </Button>
            </form>
        </div>
        
        {initialQuery && (
          <React.Suspense fallback={
            <div className="flex items-center justify-center h-64 text-muted-foreground">
                <Loader2 className="mr-2 h-8 w-8 animate-spin" />
                <span>Generating your intelligence dashboard...</span>
            </div>
          }>
            <SearchResults query={initialQuery} />
          </React.Suspense>
        )}

      </main>
      <LandingFooter />
    </div>
  );
}

export default function MarketLibraryPage() {
    return (
        <React.Suspense fallback={<div>Loading...</div>}>
            <MarketLibrary />
        </React.Suspense>
    )
}
